name: CI/CD

on: [push]

jobs:
  
  repository_scan:
    name: Repository scan
    runs-on: ubuntu-latest
    permissions: 
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # for github/codeql-action/upload-sarif to get the Action run status 
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Trivy Repo vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-repo-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-repo-results.sarif'
        category: repo-results

  tests:
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x, 16.x]
    name: Tests
    needs:
      - repository_scan
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: npm ci

    - name: Lint
      run: eslint . --ext .js,.jsx,.ts,.tsx --color -o lint_report.xml -f junit

    - name: Unit Tests
      run: npm run test
       
    - name: Coverage
      run: npm run test:coverage

    - name: SonarCloud Analysis        
      run: mvn sonar:sonar -Dsonar.projectKey=devsecops-wit-frontend -Dsonar.organization=devops-wit -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
    
    - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: junit.xml
    
  build:
    name: Build & Deploy Image
    needs: 
      - tests
    runs-on: ubuntu-latest
    permissions: 
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # for github/codeql-action/upload-sarif to get the Action run status 
  
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Maven Build
      run: mvn --batch-mode -DskipTests package

    - name: Build Docker Image
      run: docker build -t devops-wit-demo-frontend:${{ github.sha }} . 

    - name: Docker vulnerability scanner
      uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
      with:
        image-ref: 'devops-wit-demo-frontend:${{ github.sha }}'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-docker-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW'

    - name: Upload Trivy Docker Scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-docker-results.sarif'
        category: docker-results

    - name: Configure Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Ecr Repository
      id: login-to-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Deploy image to Ecr Repository
      env:
        ECR_REGISTRY: ${{ steps.login-to-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.FRONTEND_ECR_REPOSITORY }}
      run: |
        docker push devops-wit-demo-frontend:${{ github.sha }}